{"version":3,"sources":["logo.svg","routes/dashboard.js","views/Index.js","views/Profile.js","views/Icon.js","views/Notification.js","components/Sidebar.js","components/Topbar.js","components/Footer.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","dashboardRouter","path","title","icon","view","react_default","a","createElement","className","Component","classname","this","props","isOpen","id","href","src","Logo","alt","map","route","index","key","react_router_dom","exact","activeClassName","to","_default","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","menuToggled","bind","assertThisInitialized","state","setState","Navbar","light","expand","onClick","sidebarToggledClick","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","indexRouter","component","sidebarToggled","Sidebar_default","Topbar_default","react_router","Footer_default","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f1d04431.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import Index from '../views/Index';\nimport Profile from '../views/Profile';\nimport Icon from '../views/Icon';\nimport Notification from '../views/Notification';\nconst dashboardRouter = [\n  {\n    path: \"/index\",\n    title: \"Dashboard\",\n    icon: \"pe-7s-graph\",\n    view: Index\n  },\n  {\n    path: \"/profile\",\n    title: \"User profile\",\n    icon: \"pe-7s-user\",\n    view: Profile\n  },\n  {\n    path: \"/icon\",\n    title: \"Icon\",\n    icon: \"pe-7s-science\",\n    view: Icon\n  },\n  {\n    path: \"/notification\",\n    title: \"Notification\",\n    icon: \"pe-7s-bell\",\n    view: Notification\n  }\n];\nexport default dashboardRouter;","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            index\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            Profile\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            icon\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            Notification\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Logo from '../logo.svg';\nimport dashboardRouter from '../routes/dashboard';\nexport default class extends Component {\n  render() {\n    let classname = \"sidebar\";\n    if (this.props.isOpen === true) {\n      classname = classname + ' toggled';\n    }\n    return (\n      <nav id=\"sidebar\" className={classname}>\n        <a className=\"logo\" href=\"http://localhost:3000/board\">\n          <img src={Logo} alt=\"Logo\" />\n          <p>Dashboard</p>\n        </a>\n        <div className=\"sidebar-wrapper\">\n          <ul className=\"nav\">\n            {dashboardRouter.map((route, index) => {\n              return (\n                <li key={index}>\n                  <NavLink exact activeClassName=\"active\" to={route.path}>\n                    <i className={route.icon} />\n                    <p>{route.title}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}","import React, { Component } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    this.menuToggled = this.menuToggled.bind(this);\n    this.state = {\n      menuToggled: false,\n    };\n  }\n  menuToggled() {\n    this.setState({\n      menuToggled: !this.state.menuToggled\n    });\n  }\n  render() {\n    return (\n      <Navbar light expand=\"md\" className=\"topbar\">\n        <div className=\"toggleSidebar\" onClick={this.props.sidebarToggledClick}>\n          <i className=\"pe-7s-way\" />\n        </div>\n        <NavbarToggler onClick={this.menuToggled} />\n        <Collapse isOpen={this.state.menuToggled} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/components/\">Components</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Options\n                </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  Option 1\n                  </DropdownItem>\n                <DropdownItem>\n                  Option 2\n                  </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>\n                  Reset\n                  </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Navbar } from 'reactstrap';\nexport default class extends Component {\n  render() {\n    return (\n      <Navbar light className=\"footer\">\n        Copyright &copy; 2019 by This site\n      </Navbar>\n    );\n  }\n}","import App from '../App';\nconst indexRouter = [\n  {\n    path: \"/\",\n    title: \"Dashboard\",\n    icon: \"pe-7s-graph\",\n    component: App\n  },\n];\nexport default indexRouter;","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router';\nimport dashboardRouter from './routes/dashboard';\nimport Sidebar from './components/Sidebar';\nimport Topbar from './components/Topbar';\nimport Footer from './components/Footer';\nexport default class extends Component {\n  constructor() {\n    super();\n    this.state = {\n      sidebarToggled: false\n    }\n    this.sidebarToggledClick = this.sidebarToggledClick.bind(this);\n  }\n  sidebarToggledClick() {\n    this.setState({\n      sidebarToggled: !this.state.sidebarToggled\n    });\n  }\n  render() {\n    return (\n      <div className=\"page-wrapper\">\n        <Sidebar isOpen={this.state.sidebarToggled} />\n        <div className=\"main-panel\">\n          <Topbar sidebarToggledClick={this.sidebarToggledClick} />\n          <Switch>\n            {\n              dashboardRouter.map((route, index) => {\n                return (<Route key={index} path={route.path} component={route.view} />);\n              })\n            }\n            <Redirect to=\"/index\" />\n          </Switch>\n          <Footer />\n        </div>\n      </div >\n\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './index.scss';\nimport indexRouter from './routes/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/board\">\n    <Switch>\n      {indexRouter.map((route, index) => {\n        return (<Route key={index} path={route.path} component={route.component} />);\n      })}\n    </Switch>\n  </BrowserRouter>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}